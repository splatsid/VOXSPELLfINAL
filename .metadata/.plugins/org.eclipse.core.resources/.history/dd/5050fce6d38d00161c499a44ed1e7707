package quiz;

import java.awt.event.KeyAdapter;
import java.io.File;
import java.util.ArrayList;

import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.control.TextField;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;

public class NewQuiz extends Quiz {

	protected TextField _textfield;
	protected boolean correctness;
	public NewQuiz(File f,TextField tf) {
		super(f, tf);
		_textfield=tf;
		CreateActionListener();
		correctness = false;
		count=0;
	}
	
	
	/*public void CreateActionListener(){

		_textfield.setOnKeyPressed(new EventHandler<KeyEvent>(){

			@Override
			public void handle(KeyEvent ke){
				if(ke.getCode().equals(KeyCode.ENTER)){
					_textfield.clear();
					System.out.println("ENTER PRESSED");

					String input = _textfield.getText();

					try {
						correctness = checkCorrectness(input,currentWord);
					} catch (Exception e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					if(currError == 0){			//Seeing if word is correct in the first try.
						if(correctness){
							//			try {
							//	createTask()		//Add to the mastered file.	
							//	addtomasteredfile(_word);
							//			} catch (IOException e1) {
							// TODO Auto-generated catch block
							//				e1.printStackTrace();
							//			}
						}else{
							currError = 1;
						}
					}else{			//Seeing if the word is correct in the second try.
						if(correctness){
							currError = 0;		//ADD THE FOLLOWING TO FAULTED FILE.
							/*try {
							addtofaultedfile(_word);
						} catch (IOException e1) {
							// TODO Auto-generated catch block
							e1.printStackTrace();
						}*/
	//					}else{
						//	currError = 0; 		//ADD THE FOLLOWING TO THE OTHER FILES		
							/*	try {
							addtofailedfile(_word);
							addtofailedwordlistfile(_word);
						} catch (IOException e1) {
							// TODO Auto-generated catch block
							e1.printStackTrace();
						}
					}*/
		//				}
			//			if(getCount() < 10){		//Go to next word.
				//			_textfield.clear();
				//			startspellingtest();
				//		}else{			//If there's no next words return to main menu.
	//						System.out.println("End of quiz");
	//					}
	//				}
//
	//			}
	//		}


		//});
	//}


	//public void startspellingtest() {
/*		ArrayList<String> thetestwords = new ArrayList<String>();
		
		thetestwords = giveWords();
		currentWord = thetestwords.get(count);
		try {
			sayText(currentWord);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}*/


}








